import telebot
from telebot import types

# –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ç–æ–∫–µ–Ω
TOKEN = '8128618821:AAEVXwdLHufalKA3IhaFHaZX20rnDezcoIA'
# –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ URL –≤–∞—à–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –Ω–∞ GitHub Pages
GITHUB_PAGES_URL = 'https://zhdanovalexey.github.io/metronome/'

bot = telebot.TeleBot(TOKEN)

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_states = {}

def create_tempo_keyboard():
    keyboard = types.ReplyKeyboardMarkup(row_width=5, resize_keyboard=True)
    tempo_buttons = [str(i) for i in range(5, 51, 5)]
    rows = [tempo_buttons[i:i+5] for i in range(0, len(tempo_buttons), 5)]
    for row in rows:
        keyboard.add(*row)
    keyboard.add("Stop")
    return keyboard

def create_duration_keyboard():
    keyboard = types.ReplyKeyboardMarkup(row_width=3, resize_keyboard=True)
    # –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –≤ –º–∏–Ω—É—Ç–∞—Ö
    durations = ["1 –º–∏–Ω", "2 –º–∏–Ω", "3 –º–∏–Ω", "5 –º–∏–Ω", "7 –º–∏–Ω", "10 –º–∏–Ω"]
    rows = [durations[i:i+3] for i in range(0, len(durations), 3)]
    for row in rows:
        keyboard.add(*row)
    return keyboard

@bot.message_handler(commands=['start'])
def start(message):
    keyboard = create_tempo_keyboard()
    bot.reply_to(
        message,
        "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç-–º–µ—Ç—Ä–æ–Ω–æ–º.\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º–ø (—É–¥–∞—Ä–æ–≤ –≤ –º–∏–Ω—É—Ç—É):",
        reply_markup=keyboard
    )
    user_states[message.chat.id] = {'state': 'waiting_for_tempo'}

@bot.message_handler(func=lambda message: True)
def handle_message(message):
    chat_id = message.chat.id
    
    if message.text == "Stop":
        bot.reply_to(message, 
            "–ß—Ç–æ–±—ã –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –º–µ—Ç—Ä–æ–Ω–æ–º, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '–°—Ç–æ–ø' –Ω–∞ –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü–µ –∏–ª–∏ –∑–∞–∫—Ä–æ–π—Ç–µ –µ—ë.")
        return
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_state = user_states.get(chat_id, {'state': 'waiting_for_tempo'})
    
    if user_state['state'] == 'waiting_for_tempo':
        try:
            tempo = int(message.text)
            if 5 <= tempo <= 50:
                user_state['tempo'] = tempo
                user_state['state'] = 'waiting_for_duration'
                
                keyboard = create_duration_keyboard()
                bot.reply_to(
                    message,
                    f"–¢–µ–º–ø —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {tempo} BPM\n"
                    f"–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø–æ–¥—Ö–æ–¥–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 5 –º–∏–Ω—É—Ç):",
                    reply_markup=keyboard
                )
            else:
                bot.reply_to(message, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º–ø –æ—Ç 5 –¥–æ 50 —É–¥–∞—Ä–æ–≤ –≤ –º–∏–Ω—É—Ç—É")
        except ValueError:
            bot.reply_to(message, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º–ø –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫")
    
    elif user_state['state'] == 'waiting_for_duration':
        try:
            # –ò–∑–≤–ª–µ–∫–∞–µ–º —á–∏—Å–ª–æ –º–∏–Ω—É—Ç –∏–∑ —Ç–µ–∫—Å—Ç–∞ –∫–Ω–æ–ø–∫–∏
            duration_text = message.text.split()[0]
            duration_minutes = int(duration_text)
            duration_seconds = duration_minutes * 60
            tempo = user_state['tempo']
            
            # –°–æ–∑–¥–∞–µ–º URL —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
            url = f"{GITHUB_PAGES_URL}?bpm={tempo}&duration={duration_seconds}&autostart=true"
            
            keyboard = create_tempo_keyboard()
            bot.reply_to(
                message,
                f"‚úÖ –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã:\n"
                f"‚Ä¢ –¢–µ–º–ø: {tempo} BPM\n"
                f"‚Ä¢ –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {duration_minutes} –º–∏–Ω—É—Ç\n\n"
                f"üéµ –ù–∞–∂–º–∏—Ç–µ –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –∑–∞–ø—É—Å—Ç–∏—Ç—å –º–µ—Ç—Ä–æ–Ω–æ–º:\n{url}\n\n"
                f"–ü–æ–¥—Å–∫–∞–∑–∫–∞: –í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–∫—Ä—ã—Ç—å —ç—Ç—É —Å—Å—ã–ª–∫—É –Ω–∞ –ª—é–±–æ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ!\n\n"
                f"–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –Ω–æ–≤—ã–π –ø–æ–¥—Ö–æ–¥, –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º–ø:",
                reply_markup=keyboard
            )
            
            # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user_state['state'] = 'waiting_for_tempo'
            
        except (ValueError, IndexError):
            bot.reply_to(message, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    user_states[chat_id] = user_state

if __name__ == "__main__":
    print("Bot started")
    bot.infinity_polling()